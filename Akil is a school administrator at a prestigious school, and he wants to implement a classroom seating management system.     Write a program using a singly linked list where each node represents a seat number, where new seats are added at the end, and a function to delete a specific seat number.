#include <iostream>
#include <cstdlib>
using namespace std;

struct SeatNode {
    int seatNumber;
    SeatNode* next;
};

SeatNode* head = nullptr;

void addSeat(int seatNumber) {
    SeatNode* newNode = (SeatNode*)malloc(sizeof(SeatNode));
    newNode->seatNumber = seatNumber;
    newNode->next = nullptr;

    if (head == nullptr) {
        head = newNode;
    } else {
        SeatNode* current = head;
        while (current->next != nullptr) {
            current = current->next;
        }
        current->next = newNode;
    }
}

void deleteSeat(int seatNumber) {
    SeatNode* current = head;
    SeatNode* previous = nullptr;

    while (current != nullptr && current->seatNumber != seatNumber) {
        previous = current;
        current = current->next;
    }

    if (current != nullptr) {
        if (previous == nullptr) {
            head = current->next;
        } else {
            previous->next = current->next;
        }
        free(current);
        cout << "The seat " << seatNumber << " is deleted" << endl;
    } else {
        cout << "Seat not found: " << seatNumber << endl;
    }
}

void displaySeats() {
    SeatNode* current = head;
    while (current != nullptr) {
        cout << current->seatNumber << " ";
        current = current->next;
    }
    cout << endl;
}

int main() {
    int choice, seatNumber;

    while (true) {
        cin >> choice;

        switch (choice) {
            case 1:
                cin >> seatNumber;
                addSeat(seatNumber);
                break;
            case 2:
                cin >> seatNumber;
                deleteSeat(seatNumber);
                break;
            case 3:
                displaySeats(); 
                return 0;
            default:
                cout << "Invalid choice" << endl;
        }
    }

    return 0;
}
