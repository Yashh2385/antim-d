#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define MAX_SIZE 20

int stack[MAX_SIZE];
int top = -1;

int isFull() {
    return top == MAX_SIZE - 1;
}

int isEmpty() {
    return top == -1;
}

void push(int data) {
    if (!isFull()) {
        stack[++top] = data;
    } 
}

int pop() {
    //Type your code here
    if (!isEmpty()) {
        return stack[top--];
    } else {
        return INT_MIN;
    }

}

int peek() {
    if (!isEmpty()) {
        return stack[top];
    } else {
        return INT_MIN;
    }
}

int findMinimum() {
    //Type your code here
    if (!isEmpty()) {
        int min = stack[top];
        for (int i = top; i >= 0; i--) {
            if (stack[i] < min) {
                min = stack[i];
            }
        }
        return min;
    } else {
        return INT_MIN;
    }
}

int main() {
    int n, value;

    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &value);
        push(value);
    }

    printf("Minimum element in the stack: %d\n", findMinimum());

    int popped = pop();
    printf("Popped element: %d\n", popped);
    printf("Minimum element in the stack after popping: %d\n", findMinimum());

    return 0;
}
