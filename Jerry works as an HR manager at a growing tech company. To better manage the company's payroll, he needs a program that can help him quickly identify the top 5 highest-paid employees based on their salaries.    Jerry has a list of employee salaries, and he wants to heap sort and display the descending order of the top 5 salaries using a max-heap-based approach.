#include <iostream>
using namespace std;

#define MAX_SIZE 100

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void maxHeapify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] > arr[largest])
        largest = left;

    if (right < n && arr[right] > arr[largest])
        largest = right;

    if (largest != i) {
        swap(&arr[i], &arr[largest]);
        maxHeapify(arr, n, largest);
    }
}

void buildMaxHeap(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--) {
        maxHeapify(arr, n, i);
    }
}

void heapSort(int arr[], int n) {
    //Type your code here
    buildMaxHeap(arr, n);

    for (int i = n - 1; i >= n - 5; i--) {
        swap(&arr[0], &arr[i]);
        maxHeapify(arr, i, 0);
    }
}

void printTopSalaries(int arr[], int n, int k) {
    for (int i = n - 1; i >= n - k; i--) {
        cout << arr[i] << " ";
    }
}

int main() {
    int salaries[MAX_SIZE];
    int n;

    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> salaries[i];
    }

    heapSort(salaries, n);
    printTopSalaries(salaries, n, 5);

    return 0;
}
