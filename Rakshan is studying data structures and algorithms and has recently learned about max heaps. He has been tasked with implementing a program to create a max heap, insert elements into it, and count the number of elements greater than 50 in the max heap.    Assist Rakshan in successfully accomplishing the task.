#include <stdio.h>

void swap(int arr[], int a, int b) {
    int temp = arr[a];
    arr[a] = arr[b];
    arr[b] = temp;
}

void maxHeapify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] > arr[largest])
        largest = left;

    if (right < n && arr[right] > arr[largest])
        largest = right;

    if (largest != i) {
        swap(arr, i, largest);
        maxHeapify(arr, n, largest);
    }
}

void buildMaxHeap(int arr[], int n) {
    for (int i = (n / 2) - 1; i >= 0; i--) {
        maxHeapify(arr, n, i);
    }
}

void insertIntoMaxHeap(int arr[], int *n, int value) {
    //Type your code here
    (*n)++;
    int i = *n - 1;
    arr[i] = value;

    while (i > 0 && arr[(i - 1) / 2] < arr[i]) {
        swap(arr, i, (i - 1) / 2);
        i = (i - 1) / 2;
    }
}

void printMaxHeap(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
}

int countAbove50(int arr[], int n) {
    //Type your code here
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] > 50) {
            count++;
        }
    }
    return count;
}

int main() {
    int arr[100];
    int n = 0;
    int num_elements;

    scanf("%d", &num_elements);

    for (int i = 0; i < num_elements; i++) {
        int value;
        scanf("%d", &value);
        insertIntoMaxHeap(arr, &n, value);
    }

    buildMaxHeap(arr, n);

    printMaxHeap(arr, n);
    printf("\n");

    int count = countAbove50(arr, n);
    printf("%d\n", count);

    return 0;
}
