#include <stdio.h>
#include <stdlib.h>

struct TreeNode {
    int data;
    struct TreeNode* left;
    struct TreeNode* right;
};

struct TreeNode* createNode(int data) {
    struct TreeNode* newNode = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

struct TreeNode* insert(struct TreeNode* root, int data) {
    if (root == NULL) {
        return createNode(data);
    }

    if (data < root->data) {
        root->left = insert(root->left, data);
    } else if (data > root->data) {
        root->right = insert(root->right, data);
    }

    return root;
}

int inorderSumOfOdds(struct TreeNode* root) {
    //Type your code here
    if (root == NULL) {
        return 0;
    }

    int sum = 0;
    sum += inorderSumOfOdds(root->left);

    if (root->data % 2 != 0) {
        sum += root->data;
    }

    sum += inorderSumOfOdds(root->right);

    return sum;
}

int main() {
    struct TreeNode* root = NULL;
    int numNodes, value;

    scanf("%d", &numNodes);

    for (int i = 0; i < numNodes; i++) {
        scanf("%d", &value);
        root = insert(root, value);
    }

    int sumOfOdds = inorderSumOfOdds(root);

    printf("%d", sumOfOdds);

    return 0;
}
