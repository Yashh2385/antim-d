
#include <iostream>
using namespace std;

#define MAX_NODES 100

int graph[MAX_NODES][MAX_NODES];
bool visited[MAX_NODES];
int nodes;

void initialize() {
    for (int i = 0; i < MAX_NODES; i++) {
        visited[i] = false;
        for (int j = 0; j < MAX_NODES; j++) {
            graph[i][j] = 0;
        }
    }
}

void addEdge(int u, int v) {
    graph[u][v] = 1;
    graph[v][u] = 1;
}

void DFS(int node) {
    //Type your code here
    visited[node] = true;
    printf("%d ", node);

    for (int i = 0; i < nodes; i++) {
        if (graph[node][i] == 1 && !visited[i]) {
            DFS(i);
        }
    }
}

int main() {
    int edges;

    cin >> nodes;
    cin >> edges;

    initialize();

    for (int i = 0; i < edges; i++) {
        int u, v;
        cin >> u >> v;
        addEdge(u, v);
    }

    for (int i = 0; i < nodes; i++) {
        if (!visited[i]) {
            DFS(i);
        }
    }

    cout << endl;

    return 0;
}
