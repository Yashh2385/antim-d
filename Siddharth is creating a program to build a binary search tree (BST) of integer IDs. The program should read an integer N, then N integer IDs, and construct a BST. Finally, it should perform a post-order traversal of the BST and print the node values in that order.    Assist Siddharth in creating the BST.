#include <iostream>
using namespace std;

struct TreeNode {
    int id;
    TreeNode* left;
    TreeNode* right;
};

TreeNode* createNode(int id) {
    TreeNode* newNode = new TreeNode;
    newNode->id = id;
    newNode->left = nullptr;
    newNode->right = nullptr;
    return newNode;
}

TreeNode* insertNode(TreeNode* root, int id) {
    //Type your code here
    if (root == NULL) {
        return createNode(id);
    }

    if (id < root->id) {
        root->left = insertNode(root->left, id);
    } else {
        root->right = insertNode(root->right, id);
    }

    return root;
}

void postOrderTraversal(TreeNode* root) {
    if (root != nullptr) {
        postOrderTraversal(root->left);
        postOrderTraversal(root->right);
        cout << root->id << " ";
    }
}

int main() {
    int n;
    cin >> n;
    TreeNode* root = nullptr;

    for (int i = 0; i < n; i++) {
        int id;
        cin >> id;
        root = insertNode(root, id);
    }

    postOrderTraversal(root);
    return 0;
}
