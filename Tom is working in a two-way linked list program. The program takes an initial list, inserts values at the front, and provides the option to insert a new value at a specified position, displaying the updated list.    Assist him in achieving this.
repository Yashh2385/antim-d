#include <iostream>
using namespace std;

struct Node {
    int info;
    Node* prev;
    Node* next;
};

Node* start = nullptr;

void display() {
    Node* temp = start;
    while (temp != nullptr) {
        cout << temp->info << " ";
        temp = temp->next;
    }
    cout << endl;
}

void insertAtFront(int data) {
    Node* newNode = new Node;
    newNode->info = data;

    if (start == nullptr) {
        newNode->prev = nullptr;
        newNode->next = nullptr;
        start = newNode;
    } else {
        newNode->prev = nullptr;
        newNode->next = start;
        start->prev = newNode;
        start = newNode;
    }
}

void insertAtPosition(int data, int position) {
    Node* newNode, *temp;
    newNode = new Node;
    newNode->info = data;

    if (position == 1) {
        newNode->prev = nullptr;
        newNode->next = start;
        if (start != nullptr)
            start->prev = newNode;
        start = newNode;
        return;
    }

    temp = start;
    int count = 1;
    while (count < position - 1 && temp != nullptr) {
        temp = temp->next;
        count++;
    }

    newNode->next = temp->next;
    newNode->prev = temp;
    if (temp->next != nullptr)
        temp->next->prev = newNode;
    temp->next = newNode;
}

int main() {
    int n, data, position;

    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> data;
        insertAtFront(data);
    }

    cin >> position;
    cin >> data;

    insertAtPosition(data, position);
    display();

    return 0;
}
