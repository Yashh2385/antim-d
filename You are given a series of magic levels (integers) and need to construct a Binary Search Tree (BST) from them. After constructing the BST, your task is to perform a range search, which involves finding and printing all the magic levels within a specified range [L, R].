#include <iostream>
#include <cstdlib>

using namespace std;

struct Node {
    int key;
    struct Node* left;
    struct Node* right;
};

struct Node* createNode(int key) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->key = key;
    newNode->left = newNode->right = NULL;
    return newNode;
}

struct Node* insert(struct Node* root, int key) {
    if (root == NULL) {
        return createNode(key);
    }

    if (key < root->key) {
        root->left = insert(root->left, key);
    } else if (key > root->key) {
        root->right = insert(root->right, key);
    }

    return root;
}

void rangeSearch(struct Node* root, int L, int R) {
    //Type your code here
    if (root != NULL) {
        if (root->key >= L && root->key <= R) {
            rangeSearch(root->left, L, R);
            printf("%d ", root->key);
            rangeSearch(root->right, L, R);
        }
        else if (root->key < L) {
            rangeSearch(root->right, L, R);
        }
        else if (root->key > R) {
            rangeSearch(root->left, L, R);
        }
    }
}

int main() {
    int N;
    cin >> N;

    struct Node* root = nullptr;
    for (int i = 0; i < N; ++i) {
        int magicLevel;
        cin >> magicLevel;
        root = insert(root, magicLevel);
    }

    int L, R;
    cin >> L >> R;

    rangeSearch(root, L, R);

    return 0;
}
