#include <stdio.h>
#include <stdlib.h>

void floydWarshall(int N, int** graph) {
    for (int k = 0; k < N; k++) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (graph[i][j] || (graph[i][k] && graph[k][j])) {
                    graph[i][j] = 1;
                }
            }
        }
    }
}

int main() {
    int N;
    scanf("%d", &N);

    int** graph = (int**)malloc(N * sizeof(int*));
    for (int i = 0; i < N; i++) {
        graph[i] = (int*)malloc(N * sizeof(int));
        char row[N + 1];
        scanf("%s", row);
        for (int j = 0; j < N; j++) {
            graph[i][j] = (row[j] == '1') ? 1 : 0;
        }
    }

    floydWarshall(N, graph);

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            printf("%d", graph[i][j]);
        }
        printf("\n");
    }

    for (int i = 0; i < N; i++) {
        free(graph[i]);
    }
    free(graph);

    return 0;
}
